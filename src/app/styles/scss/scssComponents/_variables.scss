$primary: var(--primary);
$secondary: var(--secondary);

$dark: var(--dark);
$dark-one: var(--darkone);
$dark-two: var(--darktwo);

$white: var(--white);
$gray: var(--gray);
$gray-one: var(--grayone);
$gray-two: var(--graytwo);

@mixin flex($flow: row) {
  display: flex;
  flex-direction: $flow;
}

@mixin center($direction: row) {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: $direction;
}

@mixin full-flex($align: center, $justify: center, $flow: row) {
  display: flex;
  align-items: $align;
  justify-content: $justify;
  flex-direction: $flow;
}

@mixin borderdox {
  box-sizing: border-box;

  // Apply to pseudo-elements as well
  &::before,
  &::after {
    box-sizing: border-box;
  }
}
@mixin bgimage($image) {
  background-image: url($image);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
}

@mixin position(
  $position: relative,
  $top: 0,
  $right: 0,
  $bottom: 0,
  $left: 0,
  $z-index: 1
) {
  position: $position;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  z-index: $z-index;
}

@mixin transparent-white() {
  background: rgba(255, 255, 255, 0.25);
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
}

@mixin hover-animation($line-color: black) {
  position: relative;
  padding: 5px;
  font-weight: bold;
  cursor: pointer;
  &::after {
    position: absolute;
    left: 0;
    bottom: -2px;
    content: "";
    width: 0;
    height: 2px;
    background-color: $line-color;
  }
  &:hover::after {
    width: 100%;
  }
}

$breakpoints: (
  "sm": 850px,
);

@mixin sm {
  @media (max-width: map-get($breakpoints, "sm")) {
    @content;
  }
}

@mixin media($bp) {
  @media (max-width: $bp) {
    @content;
  }
}
